{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.min.js","sourcesContent":["var App = {\n\n    callFunction: function (name, arguments) {\n\n        var fn = window[name];\n\n        if (typeof fn !== 'function')\n            return;\n\n        fn.apply(window, arguments);\n    },\n\n    local: {\n        currency: function (id) {\n            if (!id) {\n                return Data.local.currency;\n            }\n\n            return Data.local.currencies[id]\n        }\n    },\n\n    click: function (id) {\n        $(id).click();\n    },\n\n    trigger: function (id) {\n        $(id).click();\n    },\n\n    redirect: function (url, message) {\n\n        App.dimmer.page(message);\n\n        setTimeout(function () {\n            window.location = url;\n        }, 1000);\n    },\n\n    reload: function () {\n        location.reload();\n    },\n\n    load: function (id, url) {\n\n        App.dimmer.page();\n\n        $.each($('.close'), function (key, item) {\n            $(item).click();\n        });\n\n        $(id).load(url, function (response, status, xhr) {\n            App.dimmer.remove();\n            App.run();\n            if (status == \"error\") {\n                App.message('error', Data.lang.error.reload);\n                status = false;\n                return false;\n            }\n        });\n    },\n\n    remove: function (id, call) {\n        $(id).fadeOut('slow', function () {\n            $(id).remove();\n            App.tool.call(call);\n        });\n    },\n\n    dimmer: {\n\n        message: null,\n\n        createLoading: function (message) {\n\n            if (!message) {\n                message = Data.lang.reload;\n            }\n\n            App.dimmer.message = '<div id=\"dimmer\" class=\"ui active inverted dimmer\"><div class=\"ui large text loader\">' + message + '</div></div>';\n\n            return App.dimmer.message;\n        },\n\n        page: function (message) {\n            $('#pageDimmer').empty().append(App.dimmer.createLoading(message));\n        },\n\n        remove: function () {\n            $('#dimmer').remove();\n        }\n    },\n\n    message: function (status, text, title) {\n\n        toastr.clear();\n\n        toastr.options = {\n            \"closeButton\"    : true,\n            \"debug\"          : false,\n            \"progressBar\"    : true,\n            \"positionClass\"  : \"toast-top-right\",\n            \"timeOut\"        : \"10000\",\n            \"extendedTimeOut\": \"1000\",\n            \"showEasing\"     : \"swing\",\n            \"hideEasing\"     : \"linear\",\n            \"showMethod\"     : \"fadeIn\",\n            \"hideMethod\"     : \"fadeOut\"\n        };\n\n        if (status == 'error') {\n            toastr.error(text, title);\n        } else if (status == 'success') {\n            toastr.success(text, title);\n        } else if (status == 'info') {\n            toastr.info(text, title);\n        } else {\n            toastr.warning(text, title);\n        }\n\n        return true;\n    },\n\n    form: {\n\n        disableButton: function () {\n            $('.button.save').addClass('disabled');\n        },\n\n        activeButton: function () {\n            $('.button.save').removeClass('disabled');\n        },\n\n        submit: function (formId) {\n            $(formId + ' .submit').click();\n        },\n\n        fake: function (action, html) {\n            var form = $('#fakeForm');\n            form.attr('data-action', '');\n\n            form.find('.data').html(html);\n            form.attr('data-action', action);\n\n            App.form.action = form.attr('data-action');\n            return App.form.send('#fakeForm', action);\n        },\n\n        copy: function (action, id) {\n            App.form.send(id, action);\n        },\n\n        validate: function (formId, fields) {\n            $(formId).form({\n                fields   : fields,\n                inline   : true,\n                on       : 'blur',\n                onSuccess: function () {\n                    App.form.send(formId);\n                    return false;\n                },\n                onFailure: function () {\n                    App.form.activeButton();\n                    return false;\n                }\n            });\n        },\n\n        send: function (formId, action) {\n\n            form = $(formId);\n\n            App.form.disabled(form);\n\n            if (!action) {\n                action = form.data('action');\n            }\n\n            App.editor.form();\n\n            form.ajaxSubmit({\n                url     : action,\n                type    : 'post',\n                dataType: 'json',\n                success : App.form.response.success,\n                error   : App.form.response.error,\n                data    : $(form.data('forms')).serializeArray()\n            });\n        },\n\n        disabled: function (form) {\n            App.form.disableButton();\n            form.addClass('loading');\n        },\n\n        active: function (form) {\n            App.dimmer.remove();\n            App.form.activeButton();\n            form.removeClass('loading');\n        },\n\n        response: {\n\n            data: null,\n\n            success: function (response, jqForm, options, form) {\n\n                App.form.response.data = response;\n\n                App.form.active(form);\n\n                if (response.remove) {\n                    $.each(response.remove, function (index, el) {\n                        App.remove(el);\n                    });\n                }\n\n                if (response.trigger) {\n                    $.each(response.trigger, function (index, el) {\n                        App.trigger(el);\n                    });\n                }\n\n                if (response.redirect) {\n                    return App.redirect(response.redirect.url, response.redirect.message);\n                }\n\n                App.message('success', response.success);\n\n                return true;\n            },\n\n            error: function (response, jqForm, options, form) {\n\n                App.form.response.data = response;\n\n                App.form.active(form);\n\n                if (response.trigger) {\n                    $.each(response.trigger, function (index, el) {\n                        App.trigger(el);\n                    });\n                }\n\n                if (response.redirect) {\n                    return App.redirect(response.redirect.url, response.redirect.message);\n                }\n\n                if (response.status == 400) {\n                    var json = App.tool.textToJson(response.responseText);\n\n                    return App.message('error', json.error);\n                }\n\n                if (response.status == 401) {\n\n                    var json = App.tool.textToJson(response.responseText);\n\n                    return App.message('error', json.message, json.title);\n                }\n\n                if (response.status == 422) {\n\n                    var responseJson = App.tool.textToJson(response.responseText);\n\n                    $.each(responseJson, function (index, el) {\n                        App.message('error', el);\n                    });\n\n                    return false;\n                }\n\n                if (response.status == 404) {\n                    return App.message('error', Data.lang.error.notFound);\n                }\n\n                if (response.status == 500 || response.status == 502) {\n                    return App.message('error', Data.lang.error.default);\n                }\n\n                App.message('error', response.error);\n\n                return false;\n            }\n        }\n    },\n\n    modal: {\n\n        open: function (id, setting) {\n            $(id)\n                .modal('refresh')\n                .modal(setting)\n                .modal('show')\n                .modal('refresh')\n            ;\n        },\n\n        close: function (id, setting) {\n            $(id)\n                .modal('hide');\n        },\n\n        delete: function () {\n\n            $('.multiple.destroy').click(function () {\n                var item = $(this);\n                App.modal.open('#modalApprove', {\n                    allowMultiple: true,\n                    closable     : false,\n                    onApprove    : function () {\n\n                        var current = Data.route.current.as;\n\n                        if (item.data('dataid')) {\n                            current = item.data('dataid');\n                        }\n\n                        App.dimmer.page(Data.lang.wait);\n                        App.form.fake(item.data('action'), $('#data-' + current).html());\n\n                        return true;\n                    }\n                });\n            });\n\n            $('.modal.delete').click(function () {\n                var data = $(this).parent().parent().parent().next();\n                var item = $(this);\n\n                App.modal.open('#modalApprove', {\n                    closable     : false,\n                    allowMultiple: true,\n                    onApprove    : function () {\n                        App.dimmer.page(Data.lang.wait);\n                        App.form.fake(item.data('action'), data.html());\n\n                        return true;\n                    }\n                });\n            });\n\n            $('.modalDelete').click(function () {\n                var data = $(this).parent().next();\n                var item = $(this);\n\n                App.modal.open('#modalApprove', {\n                    closable     : false,\n                    allowMultiple: true,\n                    onApprove    : function () {\n                        App.dimmer.page(Data.lang.wait);\n                        App.form.fake(item.data('action'), data.html());\n\n                        return true;\n                    }\n                });\n            });\n        },\n\n        filemanagerSettting: {},\n\n        filemanager: function (id, type) {\n\n            if (!type) {\n                type = 'one';\n            }\n\n            App.modal.filemanagerSettting.type = type;\n            App.modal.filemanagerSettting.id   = id;\n\n            $('#modalFileManager').find('.content').html('<iframe src=\"' + Data.link.filemanager + '\" frameborder=\"0\" style=\"border:0px; background:transparent; overflow-y: hidden; min-height: 500px; margin-bottom: -2px; width: 100%\"></iframe>');\n            App.modal.open('#modalFileManager', {\n                allowMultiple: true\n            });\n        },\n\n        run: function () {\n            App.modal.delete();\n        }\n    },\n\n    tool: {\n        textToJson: function (string) {\n            return JSON.parse(string);\n        },\n\n        lang: {\n\n            first: function () {\n\n                $('.field.lang').each(function (index, el) {\n                    $(el).find('.tab').removeClass('active');\n                });\n\n                $('.field.lang').each(function (index, el) {\n                    var item = $(el).find('.menu .active').first();\n                    $(\"div[data-tab='\" + item.data('tab') + \"']\").trigger('click');\n                });\n            },\n\n            click: function () {\n                $('.field.lang .menu .item').on('click', function () {\n                    $('.field.lang .dropdown').removeClass('active');\n\n                    $('.field.lang .menu.transition')\n                        .removeClass('visible')\n                        .removeAttr('style')\n                        .removeClass('transition')\n                });\n            },\n\n            run: function () {\n                App.tool.lang.first();\n                App.tool.lang.click();\n            }\n        },\n\n        image: {\n            remove: function (id) {\n                $(id).find('img').attr('src', Data.theme.noimage);\n                $(id).find('input').val('');\n            }\n        },\n\n        row: {\n            append: function (action, id, message, data) {\n\n                App.dimmer.page(message);\n\n                $.get(action, data, function (response) {\n                    $(id).append(response);\n                    App.dimmer.remove();\n                    App.run();\n                });\n            },\n\n            change: function (action, id, message, formData, call) {\n\n                App.dimmer.page(message);\n\n                var responseData = null;\n\n                $.get(action, formData, function (response) {\n\n                    $(id).after(response);\n\n                    App.dimmer.remove();\n\n                    App.run();\n\n                    $(id).remove();\n\n                    responseData = response;\n\n                    App.tool.call(call);\n                });\n\n                return responseData;\n            },\n\n            remove: function (id, call) {\n                $('#onApproveModal').modal({\n                    closable     : false,\n                    allowMultiple: true,\n                    onDeny       : function () {\n                        return true;\n                    },\n                    onApprove    : function () {\n                        App.remove(id, call);\n                        return true;\n                    }\n                }).modal('show');\n            }\n        },\n\n        currency: {\n\n            setFormat: function () {\n                $('.currency.format.set').each(function (i, el) {\n\n                    var item = $(el);\n\n                    item.html(\n                        App.tool.currency.format(\n                            item.data('price')\n                        )\n                    );\n\n                });\n            },\n\n            format: function (money, currencyId) {\n\n                var currency = App.local.currency(currencyId);\n\n                return accounting.formatMoney(money, {\n                    symbol   : currency.symbol,\n                    format   : currency.format,\n                    precision: currency.step,\n                    decimal  : currency.decimal,\n                    thousand : currency.thousand\n                });\n            },\n\n            run: function () {\n                App.tool.currency.setFormat();\n            }\n        },\n\n        date: {\n            timepicker: function (item) {\n                return App.tool.date.picker(item, 'H:i');\n            },\n\n            datepicker: function (item) {\n                return App.tool.date.picker(item, 'Y-m-d');\n            },\n\n            datetimepicker: function (item) {\n                return $(item).datetimepicker({\n                    lang       : 'tr',\n                    timepicker : true,\n                    format     : 'Y-m-d H:i',\n                    scrollMonth: false\n                });\n            },\n\n            picker: function (item, setting) {\n                return $(item).datetimepicker({\n                    lang       : 'tr',\n                    timepicker : false,\n                    format     : setting,\n                    scrollMonth: false\n                });\n            }\n        },\n\n        call: function (data) {\n            $.each(data, function (key, el) {\n                App.callFunction(el);\n            });\n        },\n\n        upButton: function () {\n            $('.upButton').click(function (event) {\n                event.preventDefault();\n                $('body,html').animate({\n                    scrollTop: 0\n                }, \"slow\");\n            });\n\n            jQuery(window).scroll(function ($) {\n                \"use strict\";\n                var scroll = jQuery(window).scrollTop();\n                if (scroll >= 100) {\n                    if (!Modernizr.mq('only all and (max-width: 1025px)')) {\n                        jQuery('.upButton').addClass('show');\n                    }\n                } else {\n                    jQuery('.upButton').removeClass('show');\n                }\n            });\n        },\n\n        run: function () {\n            App.tool.lang.run();\n            App.tool.currency.run();\n            App.tool.upButton();\n        }\n    },\n\n    component: {\n        semanticui: {\n            dropdown: function () {\n                $('.dropdown').dropdown({\n                    transition: 'drop'\n                });\n\n                $('.tag.dropdown').dropdown({\n                    transition    : 'drop',\n                    allowAdditions: true\n                });\n            },\n\n            tab: function () {\n                $('.tabs .menu .item').tab();\n                $('.field.lang .dropdown .menu .item').tab();\n                $('.tabular .item').tab();\n            },\n\n            dimmer: function () {\n                $('.special.card .image').dimmer({\n\n                    on: 'hover'\n                });\n            },\n\n            accordion: function () {\n                $('.ui.accordion.global').accordion();\n            },\n\n            checkbox: function () {\n                $('.ui.checkbox').checkbox();\n\n                $('.ui.checkbox.all.select').checkbox({\n                    onChecked  : function () {\n                        $($(this).data('class')).checkbox('set checked');\n                    },\n                    onUnchecked: function () {\n                        $($(this).data('class')).checkbox('set unchecked');\n                    }\n                });\n            },\n\n            tableSort: function () {\n                $('.table.sortable').tablesort();\n            },\n\n            toggle: {\n\n                table: function (currentId) {\n\n                    $('.tableToggle')\n                        .checkbox({\n                            onChange: function () {\n\n                                var current = Data.route.current.as;\n\n                                if (currentId) {\n                                    current = currentId;\n                                }\n\n                                var text = '';\n\n                                $.each($('#table-' + current + ' .tableToggle.checked'), function (i, el) {\n                                    text += ',' + $(el).find('input').val();\n                                });\n\n                                $('#data-' + current + ' input').first().val(text.substring(1));\n                            }\n                        })\n                        .checkbox('attach events', '.tableToggleSelect')\n                    ;\n                },\n\n                tableToggleSet: function (id, current) {\n                    $(id + '.tableToggle')\n                        .checkbox({\n                            onChange: function () {\n\n                                var text = '';\n                                $.each($('#table-' + current + ' .tableToggle.checked'), function (i, el) {\n                                    text += ',' + $(el).find('input').val();\n                                });\n                                $('#data-' + current + ' input').first().val(text.substring(1));\n                            }\n                        })\n                        .checkbox('attach events', id + '.tableToggleSelect')\n                    ;\n                },\n\n                button: function () {\n\n                    $('.ui.toggle.button')\n                        .state({\n                            text        : {\n                                inactive  : '<i class=\"hide icon\"></i>',\n                                active    : '<i class=\"unhide icon\"></i>',\n                                activate  : '<i class=\"unhide icon\"></i>',\n                                deactivate: '<i class=\"hide icon\"></i>',\n                            },\n                            onActivate  : function () {\n                                var item = $(this).data();\n                                App.form.fake(item.actionactive, '<input type=\"hidden\" name=\"id\" value=\"' + item.id + '\">');\n                            },\n                            onDeactivate: function () {\n                                var item = $(this).data();\n                                App.form.fake(item.actionpassive, '<input type=\"hidden\" name=\"id\" value=\"' + item.id + '\">');\n                            }\n                        });\n                }\n            },\n\n            popup: function () {\n                $('.pop').popup();\n            },\n\n            progress: function () {\n                $('.ui.progress').progress();\n            },\n\n            form: function (formId, fields) {\n                $(formId).form({\n                    fields: fields,\n                    on    : 'blur'\n                });\n            },\n\n            run: function () {\n                App.component.semanticui.dropdown();\n                App.component.semanticui.tab();\n                App.component.semanticui.dimmer();\n                App.component.semanticui.accordion();\n                App.component.semanticui.checkbox();\n                App.component.semanticui.tableSort();\n                App.component.semanticui.toggle.table();\n                App.component.semanticui.toggle.button();\n                App.component.semanticui.popup();\n                App.component.semanticui.progress();\n            }\n        },\n\n        colorpick: function () {\n            if (!$.minicolors) {\n                return false;\n            }\n\n            $(\"input[name='text_color'], input[name='bg_color'], .color.picker\").minicolors({\n                control : \"brightness\",\n                theme   : \"semanticui\",\n                format  : 'rgb',\n                opacity : true,\n                swatches: [\n                    'rgba(219, 40, 40, 1)',\n                    'rgba(251, 189, 8, 1)',\n                    'rgba(33, 186, 69, 1)',\n                    'rgba(33, 133, 208, 1)',\n                    'rgba(100, 53, 201, 1)',\n                    'rgba(224, 57, 151, 1)',\n                    'rgba(151, 91, 51, 1)'\n                ]\n            });\n        },\n\n        run: function () {\n            App.component.semanticui.run();\n            App.component.colorpick();\n        }\n    },\n\n    editor: {\n        tinymce: function (el) {\n\n            if (!el) {\n                el = '.editor';\n            }\n\n            tinymce.init({\n                selector               : el,\n                theme                  : \"modern\",\n                language               : Data.local.lang.iso_code,\n                plugins                : \"colorpicker link image paste pagebreak table contextmenu table code media autoresize textcolor anchor\",\n                browser_spellcheck     : true,\n                toolbar1               : \"code,|,bold,italic,underline,strikethrough,|,alignleft,aligncenter,alignright,alignjustify,|,formatselect,blockquote,pasteword,|,bullist,numlist,|,outdent,indent,|,link,unlink,|,media,image\",\n                toolbar2               : \"\",\n                menu                   : {},\n                statusbar              : false,\n                relative_urls          : false,\n                convert_urls           : false,\n                entity_encoding        : \"raw\",\n                extended_valid_elements: \"em[class|name|id]\",\n                valid_children         : \"+body[style], +style[type]\",\n                verify_html            : false,\n                height                 : 500,\n                force_br_newlines      : false,\n                force_p_newlines       : false,\n                forced_root_block      : '',\n                file_browser_callback  : App.editor.browser\n            });\n        },\n\n        form: function () {\n            if (typeof tinyMCE != 'undefined') {\n                tinyMCE.triggerSave();\n            }\n        },\n\n        browser: function (field_name, url, type, win) {\n            tinymce.activeEditor.windowManager.open({\n                file     : Data.link.filemanager,\n                title    : 'Dosya YÃ¶neticisi',\n                width    : 1024,\n                height   : 500,\n                resizable: 'yes'\n            }, {\n                setUrl: function (url) {\n                    win.document.getElementById(field_name).value = url;\n                }\n            });\n            return false;\n        },\n\n        mirror: function (id) {\n            var textarea = document.getElementById(id);\n            var id       = $('#' + id);\n            var mode     = id.data('mode');\n            if (!mode) {\n                mode = \"text/html\";\n            }\n\n            var editor = CodeMirror.fromTextArea(textarea, {\n                mode          : mode,\n                content       : textarea.value,\n                lineNumbers   : true,\n                lineWrapping  : true,\n                electricChars : false,\n                theme         : \"eclipse\",\n                matchBrackets : true,\n                indentUnit    : 4,\n                indentWithTabs: true\n            });\n\n            editor.on(\"blur\", function () {\n                id.val(editor.getValue());\n            });\n        },\n    },\n\n    fill: {\n\n        row: {\n            brand: function (row) {\n                return '<div class=\"item\" data-value=\"' + row.id + '\" data-title=\"' + row.name + '\">' + row.name + '</div>';\n            },\n\n            zone: function (row) {\n                return '<div class=\"item\" data-value=\"' + row.id + '\" data-title=\"' + row.text.title + '\">' + row.text.title + '</div>';\n            }\n        },\n\n        run: function () {\n            if (!$('div').hasClass('field fill')) {\n                return false;\n            }\n\n            $('.field.fill').each(function (key, val) {\n\n                var base = $(val);\n\n                base.find('.ui.dropdown.search').dropdown({\n                    onChange: function (value, text, item) {\n\n                        var fill   = $(base.data('fill'));\n                        var childs = base.data('child').split(\",\");\n\n                        $.each(childs, function (keyChild, valChild) {\n                            $(valChild).find('.ui.dropdown').dropdown('clear');\n                            $(valChild).find('.ui.dropdown .menu').empty();\n                        })\n\n                        App.dimmer.page();\n\n                        $.getJSON(base.data('uri'), {parent: value}, function (rows) {\n                            $.each(rows, function (keyRow, row) {\n                                fill.find('.ui.dropdown .menu').append(window[\"App\"][\"fill\"][\"row\"][base.data('type')](row));\n                            });\n\n                            App.dimmer.remove();\n                        });\n                    }\n                });\n            });\n        }\n    },\n\n    search: {\n\n        content: function (row) {\n            App.search.setFields('content', row);\n        },\n\n        user: function (row) {\n            App.search.setFields('user', row);\n        },\n\n        brand: function (row) {\n            App.search.setFields('brand', row);\n        },\n\n        setFields: function (field, row) {\n            $.each(row, function (key, val) {\n                $('.' + field + '.' + key).val(val);\n            });\n        },\n\n        start: function (search) {\n\n            var data      = search.data();\n            var propertis = {\n                apiSettings   : {url: data.url},\n                cache         : false,\n                searchFields  : ['title'],\n                searchFullText: false,\n                minCharacters : 1,\n                onSelect      : function (row, response) {\n                    window[\"App\"][\"search\"][data.call](row);\n                }\n            };\n\n            if (data.type) {\n                propertis.type = data.type;\n            } else {\n                delete propertis.type;\n            }\n\n            return search.search(propertis);\n        },\n\n        run: function (set) {\n\n            if (!$('div').hasClass('ui search')) {\n                return false;\n            }\n\n            $('.ui.search').each(function (key, val) {\n                App.search.start($(this));\n            });\n        }\n    },\n\n    misc: {\n        licence: function () {\n\n            $('#license').html(App.dimmer.createLoading(Data.lang.info.license));\n\n            $.getJSON(Data.link.license, {\n                format  : 'json',\n                client  : Data.client,\n                product : Data.product,\n                customer: Data.customer,\n            }, function (response) {\n                $('#license').html(response.layout);\n            }).fail(function () {\n                App.dimmer.remove();\n                App.message('warning', Data.lang.error.license);\n            });\n        }\n    },\n\n    run: function () {\n        App.component.run();\n        App.modal.run();\n        App.tool.run();\n        App.fill.run();\n        App.search.run();\n    }\n\n}\n\n$(document).ready(function () {\n    $.fn.form.settings.prompt = Data.lang.prompt;\n\n    App.run();\n});\n\nvar earth = angular.module(\"Earth\", []);\n"],"sourceRoot":"/source/"}